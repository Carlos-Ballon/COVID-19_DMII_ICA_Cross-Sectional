---
title: "COVID-19 & DMII - ICA"
author: "Kevin J. Paez & Carlos Ballon-Salcedo"
date: "`r Sys.Date()`"
format: 
  html:
    toc: true
    toc-depth: 3
theme:
  dark: darkly
    
editor: visual
---

# Set global knitr options

```{r}
knitr::opts_chunk$set(message = TRUE, warning= TRUE, eval = FALSE)
```

# Load packages

```{r}
pacman::p_load(rio,
               here,
               tidyverse,
               finalfit,
               gtsummary,
               flextable,
               geepack, 
               broom)
```

# Import data

```{r}
clean_data <- import(here("data", "clean_data.tsv"))
```

# Set theme

```{r}
my_theme <-
  list(
    "pkgwide-fn:pvalue_fun" = function(x) style_pvalue(x, digits = 2),
    "pkgwide-fn:prependpvalue_fun" = function(x) style_pvalue(x, digits = 2, prepend_p = TRUE),

    "tbl_summary-str:continuous_stat" = "{median} ({p25}, {p75})",
    "tbl_summary-str:categorical_stat" = "{n} ({p})",
    
    "tbl_summary-fn:percent_fun" = function(x) style_number(x, digits = 1, scale = 100),
    
    "tbl_summary-arg:missing" = "no"
  )

set_gtsummary_theme(my_theme)
theme_gtsummary_language(language = "en")
```

# Processing data

## Recode and relevel dataset

### Exposures

Possible factors associated with mortality from COVID-19 in patients with type II diabetes mellitus.

```{r}
data <- clean_data |>
  mutate(edad = cut(edad,
                    breaks = c(0, 60, 87)) |>
           ff_label("Age (years)"),
         
         sexo = factor(sexo) |> 
           fct_relevel("Female", "Male") |> 
           ff_label("Sex"),
         
         t_de_enfermedad = ff_label(
           t_de_enfermedad, "Duration of disease (days)"),
         
         tabaquismo = factor(tabaquismo) |> #
           fct_relevel("No", "Yes") |> 
           ff_label("Smoking"),
         
         alcoholismo = factor(alcoholismo) |> #
           fct_relevel("No", "Yes") |>
           ff_label("Alcoholism"),
           
         obesidad = factor(obesidad) |> 
           fct_relevel("No", "Yes") |>
           ff_label("Obesity"),
         
         asma_bronquial = factor(asma_bronquial) |> 
           fct_relevel("No", "Yes") |>
           ff_label("Asthma"),
         
         hta = factor(hta) |> 
           fct_relevel("No", "Yes") |>
           ff_label("Hypertension"),
         
         dislipidemia = factor(dislipidemia) |> #
           fct_relevel("No", "Yes") |>
           ff_label("Dyslipidemia"),
         
         ecv = factor(ecv) |> #
           fct_relevel("No", "Yes") |>
           ff_label("Cerebrovascular disease"),
         
         neoplasia = factor(neoplasia) |> #
           fct_relevel("No", "Yes") |>
           ff_label("Cancer"),
         
         vih = factor(vih) |> 
           fct_relevel("No", "Yes") |> #
           ff_label("HIV"),
         
         e_inmunosupresora = factor(e_inmunosupresora)|> #
           fct_relevel("No", "Yes") |>
           ff_label("Immunesupressive disease"),
         
         erc = factor(erc) |> #
           fct_recode("No" = "ON",) |> 
           fct_relevel("No", "Yes") |>
           ff_label("Chronic renal disease"),
         
         fiebre = factor(fiebre) |> 
           fct_relevel("No", "Yes") |> 
           ff_label("Fever"),

         tos = factor(tos) |> 
           fct_relevel("No", "Yes") |> 
           ff_label("Dry cought"),
         
         dolor_de_garganta = factor(dolor_de_garganta)|> #
           fct_relevel("No", "Yes") |>
           ff_label("Sore throat"),
         
         malestar_general = factor(malestar_general) |> #
           fct_relevel("No", "Yes") |>
           ff_label("General malaise"),
         
         cefalea = factor(cefalea) |> 
           fct_relevel("No", "Yes") |>
           ff_label("Headache"),
         
         astenia = factor(astenia) |>
           fct_relevel("No", "Yes") |>
           ff_label("Asthenia"),
         
         anosmia = factor(anosmia) |> 
           fct_relevel("No", "Yes") |>
           ff_label("Anosmia"),
         
         ecv.disgeusia = factor(disgeusia) |> 
           fct_relevel("No", "Yes") |>
           ff_label("Dysgeusia"),
         
         disnea = factor(disnea) |> 
           fct_relevel("No", "Yes") |>
           ff_label("Dyspnea"),
         
         perdida_de_peso = factor(perdida_de_peso) |> #
           fct_relevel("No", "Yes") |>
           ff_label("Weight loss"),
         
         estertores_pulmonares = factor(estertores_pulmonares) |> 
           fct_relevel("No", "Yes") |>
           ff_label("Lung crackles"),
         
         diarrrea = factor(diarrrea) |> #
           fct_relevel("No", "Yes") |>
           ff_label("Diarrhea"),

         emesis = factor(emesis) |> #
           fct_relevel("No", "Yes") |>
           ff_label("Vomiting"),

         dolor_abdominal = factor(dolor_abdominal) |> #
           fct_relevel("No", "Yes") |>
           ff_label("Abdominal pain"),

         poliuria = factor(poliuria) |> #
           fct_relevel("Yes", "No") |>
           ff_label("Polyuria"),

         polidipsia = factor(polidipsia) |> #
           fct_relevel("Yes", "No") |>
           ff_label("Polidipsia"),

        polifagia = factor(polifagia) |> #
           fct_relevel("Yes", "No") |>
           ff_label("Poliphagia"),
        
        disgeusia = factor(disgeusia) |> #
           fct_relevel("Yes", "No") |>
           ff_label("Dysgeusia"),

         taquipnea = factor(taquipnea) |> 
           fct_relevel("No", "Yes") |>
           ff_label("Tachypnea"),

         sensorio = factor(sensorio) |> #
           fct_recode("Awake" = "DESPIERTO",
                      "Sleepy" = "SOMNOLIENTO",
                      "Drowsy" = "SOPOROSO") |> 
           fct_relevel("Awake",
                       "Sleepy",
                       "Drowsy") |>
           ff_label("Sensory"),
        
        ingreso_a_uci = factor(ingreso_a_uci) |>
          fct_relevel("No", "Yes") |>
          ff_label("ICU admission"),
        
        corticoides = factor(corticoides) |>
          ff_label("Corticosteroids"),
        
        anticoagulantes = factor(anticoagulantes) |>
          fct_recode("Enoxaparin" = "ENOXAPARINA") |>
          fct_relevel("No", "Enoxaparin") |>
          ff_label("Anticoagulants"),
        
        antiparasitarios = factor(antiparasitarios) |>
          fct_recode("Ivermectin" = "IVERMECTINA") |>
          fct_relevel("No", "Ivermectin") |>
          ff_label("Antiparasitics"),
        
        antipaludicos = factor(antipaludicos) |>
          fct_recode("Hydroxychloroquine" = "HIDROXICLOROQUINA") |>
          fct_relevel("No", "Hydroxychloroquine") |>
          ff_label("Antimalarials"),
        
        pronacion = factor(pronacion) |>
          fct_relevel("Yes", "No") |>
          ff_label("Pronation"),
        
        hemodialisis = factor(hemodialisis) |> #
          fct_relevel("No", "Yes") |>
          ff_label("Hemodialysis"),
        
        sepsis = factor(sepsis) |> #
          fct_relevel("No", "Yes") |>
          ff_label("Sepsis"),
        
        shock_septico = factor(shock_septico) |> #
          fct_relevel("No", "Yes") |>
          ff_label("Septic shock"),
        
        t_de_enfermedad = ff_label(t_de_enfermedad, "Duration of the disease"), 
        
        p_a_sistolica_ingreso = ff_label(p_a_sistolica_ingreso, "Diastolic blood preassure (mmHg)"),
        
        p_a_diastolica_ingreso = ff_label(p_a_diastolica_ingreso, "Systolic blood pressure (mmHg)"),
        
        hemoglobina_ingreso = ff_label(hemoglobina_ingreso, "Hemoglobin (g/dL)"),
        
        hematocrito_ingreso = ff_label(hematocrito_ingreso, "Hematocrit (%)"),
        
        mcv_ingreso = ff_label(mcv_ingreso, "Mean corpuscular volume - MCV (mm^3)"),
        
        mch_ingreso = ff_label(mch_ingreso, "Mean Corpuscular Hemoglobin - MCH (pg)"),
        
        leucocitos_ingreso = ff_label(leucocitos_ingreso, "White-cell count (×10^−6/L)"),
        
        linfocitos_ingreso = ff_label(linfocitos_ingreso, "Lymphocyte count (×10^−6/L)"),
        
        neutrofilos_ingreso = ff_label(neutrofilos_ingreso, "Neutrophil count (×10^−6/L)"),
        
        plaquetas_ingreso = ff_label(plaquetas_ingreso, "Platelet count (μL)"),
        
        glucosa_ingreso = ff_label(glucosa_ingreso, "Glucose (mg/dL)"),
        
        urea_ingreso = ff_label(urea_ingreso, "Urea (mg/dL)"),
        
        creatinina_ingreso = ff_label(creatinina_ingreso, "Serum creatinine (mg/dL)"),
        
        ph_ingreso = ff_label(ph_ingreso, "pH"),
        
        frecuencia_cardiaca_ingreso = ff_label(frecuencia_cardiaca_ingreso, "Heart rate (BPM)"),
        
        frecuencia_respiratoria_ingreso = ff_label(frecuencia_respiratoria_ingreso, 
                                                   "Respiratory rate (RPM)"),
        
        saturacion_de_oxigeno_ingreso = ff_label(saturacion_de_oxigeno_ingreso, 
                                                  "Oxygen saturation - Sao2 (%)"),
        
        fio2_ingreso = ff_label(fio2_ingreso, "Fraction of inspired oxygen* - Fio2 (%)"), #
        
        po2_ingreso = ff_label(po2_ingreso, "Partial pressure of oxygen - Pao2 (mmHg)"),
        
        fio2_aga_ingreso = ff_label(fio2_aga_ingreso, "Fraction of inspired oxygen - Fio2 (%)"),
        
        pco2_ingreso = ff_label(pco2_ingreso, "Partial pressure of carbon dioxide - Pco2 (mmHg)"),
        
        pafi_ingreso = ff_label(pafi_ingreso, "PAFI (Pao2/Fio2)"),
        
        hco3_ingreso = ff_label(hco3_ingreso, "Blood bicarbonate - HCO3 (mmol/L)"),
        
        anion_gap_ingreso = ff_label(anion_gap_ingreso, "Anion Gap (mmol/L)"),
        
        sodio_ingreso = ff_label(sodio_ingreso, "Blood sodium (mmol/L)"),
        
        potasio_ingreso = ff_label(potasio_ingreso, "Blood potasium (mEq/L)"),
        
        calcio_ingreso = ff_label(calcio_ingreso, "Blood calcium (mmol/L)"),
        
        cloro_ingreso = ff_label(calcio_ingreso, "Blood chlorine (mmol/L)")
        )

data <- data |> mutate(leucocitos_ingreso = leucocitos_ingreso/1000,
                       linfocitos_ingreso = linfocitos_ingreso/1000,
                       neutrofilos_ingreso = neutrofilos_ingreso/1000,
                       plaquetas_ingreso = plaquetas_ingreso/1000)
```

### Outcomes

```{r}
data <- data |>
  mutate(a_f = factor(a_f) |>
           fct_recode("Yes" = "FALLECIDO",
                      "No" = "ALTA") |>
           fct_relevel("No", "Yes") |>
           ff_label("Mortality")
         )
```

## Variable selection

```{r}
data <- data |>
  select(hc, dni,
         # Selection of sociodemographic and history variables
         edad, sexo, t_de_enfermedad, tabaquismo, alcoholismo, 
         obesidad, asma_bronquial, hta, dislipidemia, ecv, 
         neoplasia, vih, e_inmunosupresora, erc,
         # Selection of general symptoms
         fiebre, tos, dolor_de_garganta, malestar_general, cefalea,
         astenia, disgeusia, anosmia, perdida_de_peso, disnea,
         estertores_pulmonares, diarrrea, emesis, dolor_abdominal,
         poliuria, polidipsia, polifagia, taquipnea, sensorio,
         # Selection of vital signs
         p_a_sistolica_ingreso, p_a_diastolica_ingreso, 
         frecuencia_cardiaca_ingreso, frecuencia_respiratoria_ingreso,
         saturacion_de_oxigeno_ingreso,
         # Selection of laboratory variables
         hemoglobina_ingreso, hematocrito_ingreso, mcv_ingreso,
         mch_ingreso, leucocitos_ingreso, linfocitos_ingreso, 
         neutrofilos_ingreso, plaquetas_ingreso, glucosa_ingreso, 
         urea_ingreso, creatinina_ingreso, ph_ingreso, po2_ingreso,
         pco2_ingreso, hco3_ingreso, fio2_aga_ingreso, pafi_ingreso, 
         anion_gap_ingreso, sodio_ingreso, potasio_ingreso, 
         cloro_ingreso, calcio_ingreso,
         # Selection of medication variables
         corticoides, anticoagulantes, antiparasitarios, antipaludicos, 
         pronacion, hemodialisis,
         # outcomes
         ingreso_a_uci, a_f
         )
```

## Exploratory Data Analysis (EDA)

```{r fig.height=10, fig.width=10, fig.align = 'center', eval=FALSE}
# Exploration of categorical variables
categoricas <- data |> 
  select(where(is.character))

lapply(categoricas[2:38], function(x) table(x))

# Exploration of numerical variables
numerical <- data |> 
  select(where(is.numeric))
numerical_1 <- numerical |>
  select(3:8)

# Define a function to compute the p-value of the Shapiro-Wilk test
shapiro_p <- function(x) {
  test <- shapiro.test(x)
  p_value <- round(test$p.value, 3)
  return(p_value)
}

# Create a list of plots and add the p-value to each plot
plots <- lapply(names(numerical_1), function(var) {
# Compute the p-value of the Shapiro-Wilk test for the current variable
  p_value <- shapiro_p(numerical_1[[var]])
  # Create the histogram and density plot for the current variable
  plot <- ggplot(numerical_1, aes_string(x = var)) +
    geom_histogram(aes(y = stat(density)), bins = 10, fill = "#3B3B3BFF", color = "white", alpha = 0.8) +
    geom_density(alpha = 0.3, fill = "#0073C2FF", col = "#00B5E2FF", size = 1) +
    ggtitle(paste("Histogram and Density Plot of\n", var)) +
    labs(x = element_blank()) +
    ylab("Density") +
    theme_minimal() +
    scale_y_continuous(expand=c(0.1, 0)) +
    theme(axis.line = element_line(colour = "black"))
  # Add the p-value to the plot as a text annotation
  plot <- plot + annotate("text", x = Inf, y = 0, hjust = 1.20, vjust = 1,
                          label = paste("Shapiro-Wilk test p-value =", p_value),
                          size = 3.3)
  
  return(plot)
})

# Arrange the plots in a grid using gridExtra
gridExtra::grid.arrange(grobs = plots, ncol = 2, name = "arrange")
```

# Produce outputs

## Table 1. Mortality of COVID-19 among research subjects

```{r}
table_1 <- data |> 
  tbl_summary(include = a_f)
```

## Tabla 2. Sociodemographic characteristics and history

```{r}
table_2 <- data |> 
  tbl_summary(include = c(edad:erc, a_f),
              by = a_f,
              digits = list(all_continuous() ~ c(0, 2))) |>
  modify_header(all_stat_cols() ~ "**{level}**, (n = {n})") |> 
  modify_spanning_header(all_stat_cols() ~ "**Mortality**") |> 
  modify_caption("**Table 2**. Sociodemographic characteristics and history") |> 
  add_overall() |>
  add_p() |>
  bold_p(t = 0.05)
```

## Table 3. Clinical profile

```{r}
table_3.1 = data |> 
  tbl_summary(include = c(fiebre:sensorio, a_f),
              by = a_f,
              digits = list(all_continuous() ~ c(0, 1))) |> 
  modify_header(all_stat_cols() ~ "**{level}**, (n = {n})") |> 
  modify_spanning_header(all_stat_cols() ~ "**Mortality**") |> 
  modify_caption("**Table 3**. Clinical profile") |>
  add_overall() |>
  add_p() |>
  bold_p(t = 0.05)

table_3.2 = data |> 
  tbl_summary(include = c(p_a_sistolica_ingreso:saturacion_de_oxigeno_ingreso, a_f),
              by = a_f,
              digits = list(all_continuous() ~ c(0, 1))) |> 
  modify_header(all_stat_cols() ~ "**{level}**, (n = {n})") |> 
  modify_spanning_header(all_stat_cols() ~ "**Mortality**") |> 
  add_overall() |>
  add_p() |>
  bold_p(t = 0.05)

table_3 = tbl_stack(list(table_3.1, table_3.2), group_header = c("Clinical symtoms", "Vital signs"))
```

## Table 4. Laboratory findings

```{r}
table_4 <- data |> 
  tbl_summary(include = c(hemoglobina_ingreso:calcio_ingreso, a_f),
              by = a_f,
              digits = list(all_continuous() ~ c(0, 1))) |> 
  modify_header(all_stat_cols() ~ "**{level}**, (n = {n})") |> 
  modify_spanning_header(all_stat_cols() ~ "**Mortality**") |> 
  modify_caption("**Table 4**. Laboratory findings") |>
  add_overall() |>
  add_p() |>
  bold_p(t = 0.05)
```

## Table 5. Therapeutic profile

```{r}
table_5 <- data |> 
  tbl_summary(include = c(anticoagulantes:ingreso_a_uci, a_f),
              by = a_f,
              digits = list(all_continuous() ~ c(0, 1))) |> 
  modify_header(all_stat_cols() ~ "**{level}**, (n = {n})") |> 
  modify_spanning_header(all_stat_cols() ~ "**Mortality**") |> 
  modify_caption("**Table 5**.") |>
  add_overall() |>
  add_p() |>
  bold_p(t = 0.05)
```

## Table 6. Unadjusted and adjusted models

The following variables were removed because they had `NA's` higher than the threshold: Urea (34), pronation (26), ICU admission (24).

```{r}
data$a_f.num = as.numeric(data$a_f)

data_uv <- data |> 
  dplyr::select(
  edad, ecv, hta,
  fiebre, dolor_de_garganta, cefalea, astenia, disnea, disgeusia, anosmia, diarrrea, 
  emesis, poliuria, polidipsia, polifagia, estertores_pulmonares, taquipnea, sensorio,
  frecuencia_cardiaca_ingreso, frecuencia_respiratoria_ingreso, saturacion_de_oxigeno_ingreso, 
  mcv_ingreso, mch_ingreso, leucocitos_ingreso, linfocitos_ingreso, neutrofilos_ingreso, 
  creatinina_ingreso, po2_ingreso, pco2_ingreso, hco3_ingreso, fio2_aga_ingreso, pafi_ingreso,
  anticoagulantes, antiparasitarios, antipaludicos, anion_gap_ingreso, a_f.num) |>
  
  na.omit() # Eliminate 82 observations

table_6.1 <- data_uv |>
  tbl_uvregression(include = c(edad:a_f.num),
                   y = a_f.num, 
                   method = geeglm, 
                   method.args = list(id = a_f.num, family = poisson, corstr = "independence"),
                   exponentiate = TRUE,
                   conf.int = TRUE,
                   hide_n = TRUE, 
                   tidy_fun = broom.helpers::tidy_parameters,
                   add_estimate_to_reference_rows = FALSE,
                   pvalue_fun = ~style_pvalue(.x, digits = 3),
                   estimate_fun = ~style_number(.x, digits = 2)) |>
  bold_labels() |>
  bold_p(t = 0.2)
```

```{r eval=FALSE, include=FALSE}
# fit model
geefit <- geeglm(a_f.num ~ fiebre,
  id = a_f.num,
  data = data_uv, family = poisson,
  corstr = "independence"
)

anova(geefit, test = "Chisq")

# summarize model fit with tidiers
tidy(geefit, conf.int = TRUE, exponentiate = TRUE) |>
  mutate(across(where(is.numeric), round, digits = 2))

test2 = glm(data = data, a_f.num ~ sexo, family = quasipoisson)

exp(coef(test2))
exp(confint(test2))

test3 = glm(data = data, a_f ~ hta, family = binomial)

exp(coef(test3))
exp(confint(test3))

# Tabla cruzada
tabla2 = with(data, table(sexo, a_f))

epi.2by2(dat = tabla2, method = "cohort.count", conf.level = 0.95, 
   interpret = FALSE, outcome = "as.columns")
```

White-blood cells (WBC) were eliminated to prevent collinearity with neutrophils.

```{r}
table_6.2 <- 
  geeglm(a_f.num ~ edad + ecv + hta + dolor_de_garganta + cefalea + astenia + 
           disnea + emesis + poliuria + polidipsia + estertores_pulmonares +
           taquipnea + sensorio + frecuencia_cardiaca_ingreso + frecuencia_respiratoria_ingreso + 
           saturacion_de_oxigeno_ingreso + mcv_ingreso + mch_ingreso + linfocitos_ingreso + 
           neutrofilos_ingreso + creatinina_ingreso + po2_ingreso + pco2_ingreso + 
           hco3_ingreso + fio2_aga_ingreso + pafi_ingreso + anticoagulantes + antipaludicos + 
           anion_gap_ingreso, 
         id = a_f.num, data = data_uv, family = poisson, corstr = "independence") |>
  tbl_regression(exponentiate = TRUE,
                 conf.int = TRUE,
                 pvalue_fun = ~style_pvalue(.x, digits = 3),
                 estimate_fun = ~style_number(.x, digits = 2)) |>
  bold_p(t = 0.05) |>
  add_vif()
```

```{r}
table_6 <-
  tbl_merge(tbls = list(table_6.1, table_6.2), 
            tab_spanner = c("**Unadjusted Analysis**", "**Adjusted Analysis**"))
```

# Save outputs

```{r}
# Table 2
table_2_p <- as_flex_table(table_2)

# Table 3
table_3_p <- as_flex_table(table_3)

# Table 4
table_4_p <- as_flex_table(table_4)

# Table 5
table_5_p <- as_flex_table(table_5)

# Table 6
table_6_p <- as_flex_table(table_6)

# Save tables

save_as_docx(table_2_p, path = "Table_2.docx", align = "center")

save_as_docx(table_3_p, path = "Table_3.docx", align = "center")

save_as_docx(table_4_p, path = "Table_4.docx", align = "center")

save_as_docx(table_5_p, path = "Table_5.docx", align = "center")

save_as_docx(table_6_p, path = "Table_6.docx", align = "center")
```
